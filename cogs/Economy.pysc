from typing import Union, Iterator
empty = ""
space = " "


class Entity:
    """An economy object."""
    def __init__(self, id: str, EntityType: type):
        self.id = id
        self.EntityType = EntityType
        
    def __iter__(self):
        data = vars(self)
        for dat in data.items():
            yield dat
    
    def __str__(self) -> str:
        return self.__repr__()        
            
    def __repr__(self):
        return str(list(self))

class Money:
    """Money."""
    def __init__(self, MoneyPrinted: float, GoldDeposited: int, symbol: str, name: str) -> None:
        self.MoneyPrinted = MoneyPrinted
        self.GoldDeposited = GoldDeposited
        self.value = self.GoldDeposited / self.MoneyPrinted
        self.name = name
        self.symbol = symbol
        
    def __str__(self) -> str:
        return self.__repr__(self)
    
    def __repr__(self) -> str:
        return repr(vars(self))
    
    def __iter__(self) -> Iterator[Union[float, int, str]]:
        for data in __dict__.items():
            yield data
            
    def __getitem__(self, item):
        return self.__dict__[item]
        
class country(Entity):
    """A country object"""
    def __init__(self, name: str, currency: Money, tax: float):
        self.name = name
        self.currecy = currency
        self.symbol = currency.symbol
        self.tax = tax/100
        Entity.__init__(self, f"c:{name.replace(space, empty).lower()}", country)
        
        
a = [('name', 'Oya sum'), ('currecy', {'MoneyPrinted': 10000000, 'GoldDeposited': 67, 'value': 6.7e-06, 'name': 'Krona', 'symbol': '$'}), ('symbol', '$'), ('tax', 0.2), ('id', 'c:oyasum'), ('EntityType', '__main__.country')]

for v in a:
    print(v)
    del v

print(a)
